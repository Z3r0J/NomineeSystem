// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NominaProject.Data;

namespace NominaProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220416025413_New")]
    partial class New
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NominaProject.JobPosition", b =>
                {
                    b.Property<int>("IdPosition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("MaxSalary")
                        .HasColumnType("int");

                    b.Property<int>("MinSalary")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskLevel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPosition");

                    b.HasIndex("DepartmentId");

                    b.ToTable("JobPosition");
                });

            modelBuilder.Entity("NominaProject.Models.Deduction", b =>
                {
                    b.Property<int>("IdDeduction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Apply")
                        .HasColumnType("bit");

                    b.Property<string>("DeductionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("IdDeduction");

                    b.ToTable("Deduction");
                });

            modelBuilder.Entity("NominaProject.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPayroll")
                        .HasColumnType("int");

                    b.Property<int?>("PayrollIdPayroll")
                        .HasColumnType("int");

                    b.Property<string>("departmentLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("PayrollIdPayroll");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("NominaProject.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Documents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobPositionId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MonthlySalary")
                        .HasColumnType("float");

                    b.Property<int>("UsersIdUsers")
                        .HasColumnType("int");

                    b.HasKey("IdEmployee");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobPositionId");

                    b.HasIndex("UsersIdUsers");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("NominaProject.Models.Income", b =>
                {
                    b.Property<int>("incomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("apply")
                        .HasColumnType("bit");

                    b.Property<string>("incomeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("incomeId");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("NominaProject.Models.Payroll", b =>
                {
                    b.Property<int>("IdPayroll")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("payName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPayroll");

                    b.ToTable("Payroll");
                });

            modelBuilder.Entity("NominaProject.Models.Users", b =>
                {
                    b.Property<int>("IdUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsers");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NominaProject.JobPosition", b =>
                {
                    b.HasOne("NominaProject.Models.Department", "Department")
                        .WithMany("JobPositions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NominaProject.Models.Department", b =>
                {
                    b.HasOne("NominaProject.Models.Payroll", "Payroll")
                        .WithMany("Departments")
                        .HasForeignKey("PayrollIdPayroll");

                    b.Navigation("Payroll");
                });

            modelBuilder.Entity("NominaProject.Models.Employee", b =>
                {
                    b.HasOne("NominaProject.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NominaProject.JobPosition", "JobPosition")
                        .WithMany("Employees")
                        .HasForeignKey("JobPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NominaProject.Models.Users", "Users")
                        .WithMany("Employees")
                        .HasForeignKey("UsersIdUsers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("JobPosition");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NominaProject.JobPosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("NominaProject.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("JobPositions");
                });

            modelBuilder.Entity("NominaProject.Models.Payroll", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("NominaProject.Models.Users", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
